   _          _    _                   ___  _              _               
  /_\    ___ | |_ (_)  ___   _ __     /   \(_) ___  _ __  | |  __ _  _   _ 
 //_\\  / __|| __|| | / _ \ | '_ \   / /\ /| |/ __|| '_ \ | | / _` || | | |
/  _  \| (__ | |_ | || (_) || | | | / /_// | |\__ \| |_) || || (_| || |_| |
\_/ \_/ \___| \__||_| \___/ |_| |_|/___,'  |_||___/| .__/ |_| \__,_| \__, |
                                                   |_|               |___/ 
-----------------------------------------------------------------------------------------------------------------------------------------------
This file contains information about this feature in general. One is provided for each feature in NetGore and can be found in the feature's
folder in the NetGore.Features project.
-----------------------------------------------------------------------------------------------------------------------------------------------

ActionDisplay refer to what you see on the client's screen when some kind of action takes place. For instance, how do we show that a character
has attacked. Or even harder, show that they threw or shot a projectile at another target? How about skills and spells? Or even just being
hurt? All of this falls under the ActionDisplay.

How it works is that, on the server, an ActionDisplayID is attached to various components where it makes sense. The most obvious are
attached to items and skills/spells. When attached to items, it allows you to alter the way that attacking with that items is displayed. When
attached to a skill/spell, it allows you to show the effect of the spell being casted. The server sends this ID to the client whenever it is
relevant, such as every time a character attacks, along with the target (if one exists). The client receives this ActionDisplayID, along
with the target, and ultimately finds the ActionDisplay instance for the ActionDisplayID and forwards it to a client-side script (method) marked
by an ActionDisplayScriptAttribute. Like with all scripts, it can be an actual external script, or code inside the compiled project.

The method with the ActionDisplayScriptAttribute attached to it must have the same signature as the ActionDisplayScriptHandler delegate.
All the needed information for displaying the action is passed to the method. From this method, all the effects are invoked based on
the parameters given.

-----------------------------------------------------------------------------------------------------------------------------------------------
DATABASE TABLES:
 * [None]

DATABASE PROCEDURES:
 * [None]

CONTENT FILES:
 * \Data\actiondisplays.dat